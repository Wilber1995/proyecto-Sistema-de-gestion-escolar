<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCADXAK4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9vKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAoz/hRXy5/wAFf/21NX/YR/Yn17xn4dggm8R3NzBpGlyToHitppi3
        71lPDeWqkhe5IzTinKXKjKtVjTpurLZHov7Vn7dnwq/Ys8PpffETxfp2hvOhe3sg3nXt0B/chXLke+AP
        evzt+OP/AAdb+FNFvJLb4efC/WdejUkLe6zqCWEbHsREiyMVPuVIx3zx+NXxb+LniX47/EHUPFPi/WdQ
        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
        4Ra//wCeH/j6/wCNFFAH/9k=
</value>
  </data>
</root>